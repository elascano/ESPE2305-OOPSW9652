
package ec.edu.espe.testtypeexcersice.view;

import org.bson.Document;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.model.Filters;
import ec.edu.espe.testtypeexcersice.utils.MongoDBConection;
import javax.swing.JOptionPane;

/**
 *
 * @author Sanmertin Jose, OOP-ERATION-GOSLING,DCC-ESPE
 */
public class frmTelevisionSell extends javax.swing.JFrame {
private MongoDBConection mongoDBConnection;
    /**
     * Creates new form frmTelevisionSell
     */
    public frmTelevisionSell() {
        initComponents();
        mongoDBConnection = new MongoDBConection();
        mongoDBConnection.connection("Tvs");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtId = new javax.swing.JTextField();
        txtToSell = new javax.swing.JTextField();
        txtStock = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnRecoverInfo = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnSell = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtToSell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtToSellActionPerformed(evt);
            }
        });

        jLabel1.setText("ID");

        jLabel2.setText("Modelo");

        jLabel3.setText("Vendidos");

        jLabel4.setText("Stock");

        btnRecoverInfo.setText("Recuperar Informacion");
        btnRecoverInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecoverInfoActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(0, 255, 51));
        jLabel5.setText("Programa de Ventas de Televisiones");

        btnSell.setText("Vender");
        btnSell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSellActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtModel)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtStock, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                                            .addComponent(txtToSell, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(62, 62, 62)
                                        .addComponent(btnRecoverInfo))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel5)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSell)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtToSell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnRecoverInfo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSell)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtToSellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtToSellActionPerformed
      int id = Integer.parseInt(txtId.getText());

    // Recuperar información de la base de datos
    Document query = new Document("id", id);
    Document document = mongoDBConnection.getCollection().find(query).first();

    if (document != null) {
        String model = document.getString("model");
        int stock = document.getInteger("stock");

        txtModel.setText(model);
        txtStock.setText(String.valueOf(stock));

        // Deshabilitar la edición de los campos txtModel y txtStock
        txtModel.setEditable(false);
        txtStock.setEditable(false);
    } else {
        // Limpiar los campos si no se encuentra el documento en la base de datos
        txtModel.setText("");
        txtStock.setText("");
    }
    }//GEN-LAST:event_txtToSellActionPerformed

    private void btnRecoverInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecoverInfoActionPerformed
        int id = Integer.parseInt(txtId.getText());

    
    Document query = new Document("id", id);
    Document document = mongoDBConnection.getCollection().find(query).first();

    if (document != null) {
        String model = document.getString("model");
        int stock = document.getInteger("stock");

        txtModel.setText(model);
        txtStock.setText(String.valueOf(stock));

        
        txtModel.setEditable(false);
        txtStock.setEditable(false);
    } else {
        
        txtModel.setText("");
        txtStock.setText("");
    }
    }//GEN-LAST:event_btnRecoverInfoActionPerformed
    // TODO add your handling code here:

    private void btnSellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSellActionPerformed
        int id = Integer.parseInt(txtId.getText());
        int toSell = Integer.parseInt(txtToSell.getText());

       
        Document query = new Document("id", id);
        Document document = mongoDBConnection.getCollection().find(query).first();

        if (document != null) {
            int stock = document.getInteger("stock");
            int newStock = stock - toSell;

            if (newStock >= 0) {
                Document update = new Document("$set", new Document("stock", newStock));
                mongoDBConnection.getCollection().updateOne(query, update);

                
                txtStock.setText(String.valueOf(newStock));

                JOptionPane.showMessageDialog(this, "Venta realizada con éxito");

                
                txtId.setText("");
                txtModel.setText("");
                txtStock.setText("");
                txtToSell.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "No hay suficiente stock para realizar la venta");
            }
        }
    }//GEN-LAST:event_btnSellActionPerformed
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmTelevisionSell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmTelevisionSell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmTelevisionSell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmTelevisionSell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmTelevisionSell().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRecoverInfo;
    private javax.swing.JButton btnSell;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtStock;
    private javax.swing.JTextField txtToSell;
    // End of variables declaration//GEN-END:variables
}
